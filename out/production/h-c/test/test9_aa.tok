3-0			keyword		101		int
3-4			identifier		501		seq
3-7			separator		306		(
3-8			keyword		101		int
3-12			identifier		501		m
3-13			separator		307		)
3-15			separator		304		{
4-2			keyword		101		int
4-6			identifier		501		i
4-7			separator		302		,
4-8			identifier		501		fa
4-10			separator		303		;
5-2			identifier		501		i
5-3			operator		210		=
5-4			int			101		0
5-5			separator		303		;
6-2			keyword		138		if
6-4			separator		306		(
6-5			identifier		501		m
6-6			operator		220		<=
6-8			int			101		1
6-9			separator		307		)
7-4			separator		304		{
9-1			identifier		501		fa
9-3			operator		210		=
9-4			int			101		1
9-5			separator		303		;
10-5			separator		305		}
11-3			keyword		138		if
11-5			separator		306		(
11-6			identifier		501		m
11-7			operator		209		>
11-8			int			101		1
11-9			separator		307		)
11-10			separator		304		{
12-9			identifier		501		fa
12-11			operator		210		=
12-12			identifier		501		m
12-13			operator		201		+
12-14			identifier		501		seq
12-17			separator		306		(
12-18			identifier		501		m
12-19			operator		202		-
12-20			int			101		1
12-21			separator		307		)
12-22			separator		303		;
13-5			separator		305		}
18-3			keyword		139		return
18-10			identifier		501		fa
18-12			separator		303		;
19-0			separator		305		}
22-0			keyword		128		void
22-5			identifier		501		main
22-9			separator		306		(
22-10			separator		307		)
24-0			separator		304		{
26-3			keyword		101		int
26-7			identifier		501		n
26-8			separator		303		;
28-3			identifier		501		n
28-4			operator		210		=
28-5			identifier		501		read
28-9			separator		306		(
28-10			separator		307		)
28-11			separator		303		;
30-3			identifier		501		write
30-8			separator		306		(
30-9			identifier		501		seq
30-12			separator		306		(
30-13			identifier		501		n
30-14			separator		307		)
30-15			separator		307		)
30-16			separator		303		;
32-0			separator		305		}

1-0			keyword		101		int
1-4			identifier		501		factor
1-10			separator		306		(
1-11			keyword		101		int
1-15			identifier		501		m
1-16			separator		307		)
1-18			separator		304		{
2-2			keyword		101		int
2-6			identifier		501		fa
2-8			separator		303		;
3-2			keyword		138		if
3-4			separator		306		(
3-5			identifier		501		m
3-6			operator		220		<=
3-8			int			101		1
3-9			separator		307		)
3-11			separator		304		{
4-1			identifier		501		fa
4-3			operator		210		=
4-4			int			101		1
4-5			separator		303		;
5-5			separator		305		}
6-3			keyword		138		if
6-5			separator		306		(
6-6			identifier		501		m
6-7			operator		209		>
6-8			int			101		1
6-9			separator		307		)
7-3			separator		304		{
8-7			identifier		501		fa
8-9			operator		210		=
8-10			identifier		501		m
8-11			operator		203		*
8-12			identifier		501		factor
8-18			separator		306		(
8-19			identifier		501		m
8-20			operator		202		-
8-21			int			101		1
8-22			separator		307		)
8-23			separator		303		;
9-3			separator		305		}
10-3			keyword		139		return
10-10			identifier		501		fa
10-12			separator		303		;
11-0			separator		305		}
14-0			keyword		128		void
14-5			identifier		501		main
14-9			separator		306		(
14-10			separator		307		)
16-0			separator		304		{
18-3			keyword		101		int
18-7			identifier		501		n
18-8			separator		303		;
20-3			identifier		501		n
20-4			operator		210		=
20-5			identifier		501		read
20-9			separator		306		(
20-10			separator		307		)
20-11			separator		303		;
22-3			identifier		501		write
22-8			separator		306		(
22-9			identifier		501		factor
22-15			separator		306		(
22-16			identifier		501		n
22-17			separator		307		)
22-18			separator		307		)
22-19			separator		303		;
24-0			separator		305		}
